
&НаКлиенте
Процедура ОткрытьЖЦ(Команда)
	мПараметры = Новый Структура("Ключ", фТС);
	ОткрытьФорму("Справочник.уатТС.Форма.ФормаЭлементаУпр", мПараметры);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапуститьПолучениеДанныхВФоне(Стр)
	
	п = СтрЗаменить(Стр.ВнутреннийАдрес,":",Символы.ПС);
	Сервер = СтрПолучитьСтроку(п,1);
	порт = СтрПолучитьСтроку(п,2);
	Если порт = "" ТОгда Порт = "80"; КонецЕсли;
	порт = Число(порт);
	
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Неопределено,Новый УникальныйИдентификатор);
	
	масПар = Новый Массив;
	масПар.Добавить(Сервер);
	масПар.Добавить(Порт);
	масПар.Добавить(стр.метод);
	масПар.Добавить(АдресВХранилище);
	масПар.Добавить(стр.тело);
	
	фз = ФоновыеЗадания.Выполнить("глСервер.выполнитьAPI",масПар, АдресВХранилище);
	
	Стр.Ключ = АдресВХранилище;
	Стр.ид = фз.УникальныйИдентификатор;
	Стр.Выполнено = Ложь;
	
КонецПроцедуры      


Процедура ОбновитьТблДанные()
	
	новстр = тблБаз.Добавить();
	новСтр.Наименование 	= "БУХ";
	новстр.ВнутреннийАдрес 	= Параметры.ВнутреннийАдрес;
	новстр.Метод 		    = "/"+Параметры.APIrest+"/hs/invAPI/COSTOS";
	новСтр.Тело             = Новый Структура("ГарНомер",Параметры.ГаражныйНомер);
	
	эл = Элементы.Добавить("элФ"+тблБаз.Индекс(новстр),Тип("ДекорацияФормы"),Элементы.грпОрг);
	эл.Заголовок = новСтр.Наименование;
	Эл.ЦветТекста = WebЦвета.Серый;
	
	новстр = тблБаз.Добавить();
	новСтр.Наименование 	= "ПРЗ";
	новстр.ВнутреннийАдрес 	= Параметры.ВнутреннийАдрес;
	новстр.Метод 		    = "/"+Параметры.APIrestENT+"/hs/entAPI/ITEMSTS?GetPhoto=1";
	новСтр.Тело             = СокрЛП(Параметры.ГаражныйНомер);
	
	эл = Элементы.Добавить("элФ"+тблБаз.Индекс(новстр),Тип("ДекорацияФормы"),Элементы.грпОрг);
	эл.Заголовок = новСтр.Наименование;
	Эл.ЦветТекста = WebЦвета.Серый;
	
	новстр = тблБаз.Добавить();
	новСтр.Наименование 	= "ПРЗДОК";
	новстр.ВнутреннийАдрес 	= Параметры.ВнутреннийАдрес;
	новстр.Метод 		    = "/"+Параметры.APIrestENT+"/hs/entAPI/GETTSDOCS";
	новСтр.Тело             = Новый Структура("ГарНомер",Параметры.ГаражныйНомер);
	
	эл = Элементы.Добавить("элФ"+тблБаз.Индекс(новстр),Тип("ДекорацияФормы"),Элементы.грпОрг);
	эл.Заголовок = новСтр.Наименование;
	Эл.ЦветТекста = WebЦвета.Серый;
	
	
	Для каждого Стр из  тблБаз Цикл
		ЗапуститьПолучениеДанныхВФоне(Стр);
	КонецЦикла;
	
КонецПроцедуры

	
&НаСервереБезКонтекста
Функция ПроверитьФоновыеЗадания(идФЗ)

	фз = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(идФЗ);
	
	Если фз=Неопределено Тогда
		Возврат Ложь;	
	ИНачеЕСли фз.Состояние=СостояниеФоновогоЗадания.Завершено Тогда
		Возврат  фз.Ключ;
	ИНачеЕСли фз.Состояние=СостояниеФоновогоЗадания.Активно Тогда
		Возврат  Неопределено;
	КонецеСЛИ;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура МониторингФоновыхЗаданий() Экспорт
	
	ДЛя каждого Стр из тблБаз Цикл 
		Если Стр.Выполнено Тогда Продолжить; КонецЕСлИ;
		
		резФЗ = ПроверитьФоновыеЗадания(Стр.ид);
		Если резФЗ = Неопределено Тогда
			Продолжить;
		ИНАчеЕсли резФЗ = Ложь ТОгда
			рез = ложь;
			
		Иначе
			Если Стр.Наименование = "ПРЗ" Тогда
				Рез = ЗаполнитьПрзДанные(стр.ключ);
			ИначеЕсли Стр.Наименование = "ПРЗДОК" Тогда
				Рез = ЗаполнитьДанныеДокументов(стр.ключ);
			ИНаче
				Рез = ЗаполнитьБухДанные(стр.ключ);
			КонецЕСлИ;
			
		КонецеСЛИ;
		
		Если Рез = Ложь Тогда //Ошибка в получении данных
			Стр.колПопыток = Стр.колПопыток+1;
			ЕСли Стр.колПопыток > 5 Тогда
				Стр.выполнено = Истина;
			ИНаче
				Стк = Новый Структура("ВнутреннийАдрес,метод,ключ,ид,Выполнено,Тело");
				ЗаполнитьЗначенияСвойств(Стк,Стр);
				ЗапуститьПолучениеДанныхВФоне(Стк);
				ЗаполнитьЗначенияСвойств(Стр,Стк);
				
				текЭл = Элементы["ЭлФ"+тблБаз.Индекс(Стр)];
				текЭл.Заголовок = Стр.Наименование+" ("+Стр.колПопыток+")";
			КонецеСЛИ;
			
		ИначеЕсли  Рез = Истина  Тогда
			
			
			Стр.Выполнено = Истина;
			
			Элементы["ЭлФ"+тблБаз.Индекс(Стр)].ЦветТекста = WebЦвета.СинеСерый;
			
			Если Стр.Наименование = "ПРЗ" Тогда
				Если фСтруктураАдресовКартинок.Количество() > 0 Тогда
					фТекущийИндексКартинки = 1;
					ОбновитьКартинкуПоИндексу();
					ОбновитьНавигационныеКартинки(фТекущийИндексКартинки, фТекущийИндексКартинки);
				КонецЕсли;
			КонецЕсли;
			


		КонецеСЛИ;
		
	Конеццикла;
	
	ЕстьНеВыполнено = Ложь;
	Для каждого Стр из тблБаз Цикл
		Если Стр.Выполнено = Ложь Тогда
			ЕстьНеВыполнено = Истина;
		КонецесЛИ;
	КонецЦикла;
	
	Если ЕстьНеВыполнено=Ложь Тогда
		ОтключитьОбработчикОжидания("МониторингФоновыхЗаданий");
	КонецЕСЛИ;
	
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьБухДанные(Адрес)
	
	мЗначение = ПолучитьИзВременногоХранилища(Адрес);
	
	Если мЗначение <> Неопределено Тогда
		мСтруктураСтоимости = мЗначение;
		фСтоимостьСуммаПервоначальная = мСтруктураСтоимости.ПервоначальнаяСтоимость;
		фСтоимостьСуммаОстаточная = мСтруктураСтоимости.ОстаточнаяСтоимость;
		фСтоимостьСуммаАмортизация = мСтруктураСтоимости.Амортизация;
		фСтоимостьДата = мСтруктураСтоимости.ДатаПослДвижения;
		
		Возврат Истина;
	ИНаче
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗаполнитьДанныеДокументов(Адрес)
	мДанные = ПолучитьИзВременногоХранилища(Адрес);
	Если мДанные <> Неопределено Тогда
	мМассивДокументов = мДанные.МассивДокументов;
	Для Каждого мДокумент Из мМассивДокументов Цикл
		мНоваяСтрокаТаблицыДокументов = фТаблицаДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(мНоваяСтрокаТаблицыДокументов, мДокумент);
		мАдресСкана = ПоместитьВоВременноеХранилище(мДокумент.Изображение, ЭтаФорма.УникальныйИдентификатор);
		мНоваяСтрокаТаблицыДокументов.Скан = ?(ЗначениеЗаполнено(мДокумент.Изображение), мАдресСкана, "");
		мНоваяСтрокаТаблицыДокументов.ИндексКартинки = ?(ЗначениеЗаполнено(мДокумент.Изображение), 0, -1);
	КонецЦикла;
	Возврат Истина;
КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Функция ЗаполнитьПрзДанные(Адрес)
	
	мЗначение = ПолучитьИзВременногоХранилища(Адрес);
	мСтруктураДанных = Новый Структура;
	фСтруктураАдресовКартинок = Новый Структура;
	
	Если мЗначение = Неопределено Тогда Возврат истина; КонецЕсли;
	
	
	мТаблицаДанных = мЗначение.Реквизиты;
	мМассивФотографий = мЗначение.МассивФотографий;
	Для Каждого мКолонка Из мТаблицаДанных.Колонки Цикл
		мСтруктураДанных.Вставить(мКолонка.Имя, мТаблицаДанных[0][мКолонка.Имя]);
	КонецЦикла;
	Итр = 1;
	Для Каждого мЭлемент Из мМассивФотографий Цикл
		мАдрес = ПоместитьВоВременноеХранилище(мЭлемент, ЭтаФорма.УникальныйИдентификатор);
		фСтруктураАдресовКартинок.Вставить("Элемент" + Формат(Итр, "ЧГ="), мАдрес);
		Итр = Итр + 1;
	КонецЦикла;
	
	мВсегоКартинок = фСтруктураАдресовКартинок.Количество();
	
	Если мВсегоКартинок = 0 Тогда
		Элементы.КартинкаВперед.Доступность = Ложь;
		Элементы.КартинкаНазад.Доступность = Ложь;
	КонецЕсли;
	
	Для Итр = ?(мВсегоКартинок = 0, 1, мВсегоКартинок + 1) По 10 Цикл
		Если Итр <= 3 И мВсегоКартинок = 0 Тогда
			Элементы["СтраницыКартинка" + Итр].Доступность = Ложь;
		Иначе
			Элементы["СтраницыКартинка" + Итр].Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	мРеквизитыФормы = ЭтаФорма.ПолучитьРеквизиты();
	мМассивИменРеквизитов = Новый Массив;
	Для Каждого мРеквизит Из мРеквизитыФормы Цикл
		мМассивИменРеквизитов.Добавить(мРеквизит.Имя);
	КонецЦикла;
	
	Если мСтруктураДанных.Количество() > 0 Тогда
		Для Каждого мПараКлючЗначение Из мСтруктураДанных Цикл
			//у реквзитов формы префикс "ф"; это необязательно;
			Если мМассивИменРеквизитов.Найти("ф" + мПараКлючЗначение.Ключ) <> Неопределено Тогда
				ЭтаФорма["ф" + мПараКлючЗначение.Ключ] = мПараКлючЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Гаражный номер нам нужен как единственные ключевые данные, получаемые формой - через него будут получены остальные по api
	фГарНомер = Параметры.ГаражныйНомер;
	
	ссТС = Справочники.уатТС.ПолучитьСсылку(Новый УникальныйИдентификатор(Параметры.GUID_ТС));
	ЕСли НАйти(ссТС,"не найден")=0 Тогда
		фТС = ссТС;
	ИНаче
		Элементы.ОткрытьЖЦ.Видимость = Ложь;
	КонецесЛи;
	
	ОбновитьТблДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаИндексНажатие(Элемент)
	мСтарыйИндекс = фТекущийИндексКартинки;
	фТекущийИндексКартинки = Число(СтрЗаменить(ЭтаФорма.ТекущийЭлемент.Имя, "Картинка", ""));
	ОбновитьНавигационныеКартинки(мСтарыйИндекс, фТекущийИндексКартинки);
	ОбновитьКартинкуПоИндексу();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинкуПоИндексу()
	фАдресКартинки = фСтруктураАдресовКартинок["Элемент" + Формат(фТекущийИндексКартинки, "ЧГ=")];
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНавигационныеКартинки(пСтарыйИдекс, пНовыйИндекс)
	Элементы["СтраницыКартинка" + пСтарыйИдекс].ТекущаяСтраница = Элементы["СтраницыКартинкаНеактивна" + пСтарыйИдекс];
	Элементы["СтраницыКартинка" + пНовыйИндекс].ТекущаяСтраница = Элементы["СтраницыКартинкаАктивна" + пНовыйИндекс];
КонецПроцедуры

&НаКлиенте
Процедура КартинкаВпередНажатие(Элемент)
	Если фТекущийИндексКартинки >= 1 Тогда
		мСтарыйИндекс = фТекущийИндексКартинки;
		фТекущийИндексКартинки = ?(фТекущийИндексКартинки + 1 > фСтруктураАдресовКартинок.Количество(), 1, фТекущийИндексКартинки + 1);
		ОбновитьНавигационныеКартинки(мСтарыйИндекс, фТекущийИндексКартинки);
		ОбновитьКартинкуПоИндексу();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КартинкаНазадНажатие(Элемент)
	Если фТекущийИндексКартинки >= 1 Тогда
		мСтарыйИндекс = фТекущийИндексКартинки;
		фТекущийИндексКартинки = ?(фТекущийИндексКартинки - 1 > 0, фТекущийИндексКартинки - 1, фСтруктураАдресовКартинок.Количество());
		ОбновитьНавигационныеКартинки(мСтарыйИндекс, фТекущийИндексКартинки);
		ОбновитьКартинкуПоИндексу();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("МониторингФоновыхЗаданий",1);

	
	
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.фТаблицаДокументовИндексКартинки Тогда
		фТекущаяСтрока = Элементы.фТаблицаДокументов.ТекущиеДанные;
		Если фТекущаяСтрока <> Неопределено Тогда
			фАдрес = фТекущаяСтрока.Скан;
		// вариант для старых платформ:
		//	Если ЗначениеЗаполнено(фАдрес) Тогда
		//		мДвоичныеДанные = ПолучитьИзВременногоХранилища(фАдрес);
		//		мИмяФайла = "" + КаталогВременныхФайлов() + фТекущаяСтрока.ПолноеИмяФайла;
		//		мДвоичныеДанные.Записать(мИмяФайла);
		//		ЗапуститьПриложение(мИмяФайла);
		//	КонецЕсли;
		// новый вариант:
		НачатьПолучениеФайлаССервера(фАдрес, фТекущаяСтрока.ПолноеИмяФайла);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
